<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param null $location
     * @param null $end
     * @param User $user
     * @param Int $maxResult
     *
     * @return mixed
     */
    public function getAllNotPrivateEvent($user, $maxResult, $location = null, $end = null){
        $parameters = array();
        $qb = $this->createQueryBuilder('e');
        $qb->select('e')
            ->join('e.picture', 'p')
            ->addSelect('p')
            ->where('e.start > :dateNow')
            ->orderBy('e.start', 'ASC')
            ->setMaxResults($maxResult)
            ->join('e.reservations', 'r')
            ->andWhere('r.isCreator = true')
            /*->join('r.user', 'u')*/
            ->addSelect('r')

        ;
        $parameters['dateNow'] = new \DateTime();

        if ($user == null){
            $qb->andWhere('e.isPrivate = false');
        }
        if ($location != null && $location != ''){
            $qb->andWhere("LOWER(e.city) = :location");
            $parameters['location'] = $location;
        }
        if ($end != null){
            $qb->andWhere("e.deadline < :end");
            $parameters['end'] = $end;
        }

        $qb->setParameters($parameters);
        $results = $qb->getQuery()->getResult();
        $events = array(
            "public" => [],
            "private" => []
        );
        foreach ($results as $result){
            if ($result->getIsPrivate() == false){
                $events['public'][] = $result;
            } else {
                $events['private'][] = $result;
            }
        }
        return $events;
    }

    /**
     * @param \AppBundle\Entity\User $user
     *
     * @return mixed
     */
    public function getEventByUserCreator(User $user){
        $qb = $this->createQueryBuilder('e');
        $qb->select('e')
            ->join('e.reservations', 'r')
            ->where('r.user = :user')
            ->andWhere('r.isCreator = true')
            ->setParameter('user', $user->getId())
            ->orderBy('e.start', 'ASC')
        ;

        return $qb->getQuery()->getResult();
    }

    public function getEventByUserParticipate(User $user){
        $qb = $this->createQueryBuilder('e');
        $qb->select('e')
            ->join('e.reservations', 'r')
            ->where('r.user = :user')
            ->andWhere('r.isCreator = false')
            ->setParameter('user', $user->getId());

        return $qb->getQuery()->getResult();
    }

}
